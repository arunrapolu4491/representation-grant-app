var path = require("path");
var BuiltinModule = require("module");
//Resolve our vue files with a blank.ts, this will allow the code to execute.
var Module = module.constructor.length > 1 ? module.constructor : BuiltinModule;
var oldResolveFilename = Module._resolveFilename;
Module._resolveFilename = function(request, parentModule, isMain, options) {
  if (request.includes(".vue")) return "blank.ts";
  return oldResolveFilename.call(this, request, parentModule, isMain, options);
};
import { readFileSync, writeFileSync, unlinkSync } from "fs";
const filePath = path.join(__dirname, "../../../src/types/survey-primary.ts");
unlinkSync(filePath);

import * as Survey from "survey-vue";

import { addQuestionTypes } from "../src/survey/question-types/question-types";
const json = readFileSync("../src/survey-primary.json").toString();

const generateQuestionNamesEnum = survey => {
  let questionNames = [];
  let data = "// This is autogenerated by tools/gen_typescript_response.ts. \n";
  data += `export enum SurveyQuestionNames {\n`;
  survey.getAllQuestions(false, true).forEach(function(question) {
    if (questionNames.includes(question.name)) {
      console.log(`Warning: Found duplicate questionName: ${question.name}. Skipping.`);
      return;
    }
    //survey.setValue(question.name, "test"); This is slow, but generates the correct model.
    //console.log(`${question.name}? - ${question.getType()}`);
    //if (question.name.includes("p1"))
    //console.log(`${question.name}`);
    if (question.name.includes("?") || question.name.includes("-"))
      data += `\t\"${question.name}\" = \"${question.name}\",\n`;
    else data += `\t${question.name} = \"${question.name}\",\n`;
    questionNames.push(question.name);
  });
  data += "}\n";
  writeFileSync(filePath, data, { encoding: "utf8", flag: "w" });
};

export const generateSurveyModels = () => {
  addQuestionTypes(Survey);
  const survey = new Survey.SurveyModel(json);
  console.log(`Generating response, writing to file ${filePath}`);
  generateQuestionNamesEnum(survey);
  //next is to create interface panel objects with the correct structure.
};

generateSurveyModels();
